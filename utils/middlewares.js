const jwt = require('jsonwebtoken');
const { JWT_SECRET } = require('./config');
const prisma = require('../prisma/prisma');

const extractUser = async (req, res, next) => {
  const authHeader = req.headers.authorization;
  if (!authHeader)
    return res.status(401).json({ message: 'No token provided' });
  const token = authHeader.split(' ')[1];
  console.log('token is ', token);
  if (!token) {
    return res.status(401).json({ message: 'Invalid token format' });
  }

  try {
    const userInfo = jwt.verify(token, JWT_SECRET);
    const user = await prisma.user.findUnique({ where: { id: userInfo.id } });
    if (!user) {
      return res.status(400).json({ error: 'User not found. Signup' });
    }
    req.user = user;
    console.log('Request generated by', user);
    next();
  } catch (err) {
    console.log(err.message);
    if (err.name == 'TokenExpiredError') {
      return res.status(401).json({ message: 'Token Expired' });
    }
    return res.status(401).json({ message: 'Invalid token' });
  }
};

module.exports = { extractUser };
